%matplotlib inline
import matplotlib.pyplot as pp
import pandas_datareader.data as web
import pandas as pd
import numpy as np
from scipy.stats import norm

def portfolio_rebalance(tsd1, tsd2):
  port = pd.concat([tsd1, tsd2], axis=1).dropna()
  port.columns=('p1', 'p2')
  port['a1'] = 0
  port['a2'] = 0
  port['v'] = 1
  n = len(port)
  p1 = port['p1'].iloc[0] # 初期値の取得（アップル株）
  p2 = port['p2'].iloc[0] # 初期値の取得（アマゾン株）
  v = port['v'].iloc[0]   # 初期値の取得（ポートフォリオの価値
  a1 = float(v/2/p1)      # 初期値の設定（アップル株の持ち高）
  a2 = float(v/2/p2)      # 初期値の設定（アマゾン株の持ち高）
  port.iloc[0,2] = a1     # 初期値のportへの設定（アップル株の持ち高）
  port.iloc[0,3] = a2     # 初期値のportへの設定（アマゾン株の持ち高）

  for i in range(1,len(port)):
    p1 = port['p1'].iloc[i]      # 今日のアップルの株価
    p2 = port['p2'].iloc[i]      # 今日のアマゾンの株価
    p1_0 = port['p1'].iloc[i-1]  # 前日のアップルの株価
    p2_0 = port['p2'].iloc[i-1]  # 前日のアマゾンの株価
    a1_0 = port['a1'].iloc[i-1]  # 前日のアップルの持ち高
    a2_0 = port['a2'].iloc[i-1]  # 前日のアマゾンの持ち高
    v_0 = port['v'].iloc[i-1]    # 前日のリバランスポートフォリオの価値
    v = a1_0 * p1 + a2_0 * p2    # 今日のリバランスポートフォリオの価値
    port.iloc[i,4] = v           # リバランスポートフォリオの価値のアップデート
    a1 = float(v/2/p1)           # 調整後のアップルの株数（持ち高）
    a2 = float(v/2/p2)           # 調整後のアマゾンの株数（持ち高）
    port.iloc[i,2] = a1          # アップルの株数のアップデート
    port.iloc[i,3] = a2          # アマゾンの株数のアップデート
  port['v2'] = 0.5 * port.p1 + 0.5 * port.p2 # リバランスのないポートフォリオの価値
  return port

aapl = web.DataReader("AAPL", "google", "2001/12/31", "2016/12/31")['Close']
aapl = aapl/aapl.iloc[0] # 株価の指数化
amzn = web.DataReader("AMZN", "google", "2001/12/31", "2016/12/31")['Close']
amzn = amzn/amzn.iloc[0] # 株価の指数化

port = portfolio_rebalance(aapl, amzn)
port.head(2) # 最初の2行のデータを表示