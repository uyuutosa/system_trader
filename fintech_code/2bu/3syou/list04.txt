%matplotlib inline
import matplotlib.pyplot as plt

if __name__ == '__main__':
    n=30
    rwct_nr,j=np.zeros(2)
    alpha=0.1
    a=[]

    for i in range(0,len(lntsd),n):
        y=lntsd.iloc[i:i+n]
        rwct=sm.tsa.adfuller(y,regression='ct',maxlag=0)[1]
        if rwct<alpha:
            x=y.shift(1).dropna()          # 説明変数の作成
            x=sm.add_constant(x).dropna()  # 切片の作成
            yy=y.iloc[1:].dropna()         # 被説明変数の作成
            x['time']=range(len(yy))       # 時間トレンドの作成
            results=sm.OLS(yy,x).fit()     # 回帰の最適化
            a.append(results.params[1])
            rwct_nr+=1
        j+=1

    print("期間の数",j)
    print("ドリフト＋時間トレンド付き: 棄却期間の割合",rwct_nr/j)
    plt.plot(a)

