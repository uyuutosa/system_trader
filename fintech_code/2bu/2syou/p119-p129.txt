%matplotlib inline
import matplotlib.pyplot as plt
import pandas_datareader.data as web
import numpy as np
tsd=web.DataReader("NIKKEI225", "fred", "1949/5/16")
lntsd=np.log(tsd).dropna()
lntsd.plot()


import statsmodels.api as sm
y=lntsd.ix['1989/10/15':'1989/12/31'].dropna()
x=range(len(y))
x=sm.add_constant(x)
plt.plot(y)
print(sm.tsa.adfuller(y.NIKKEI225,regression='nc')[1])


print(sm.tsa.adfuller(y.NIKKEI225,regression='c')[1])


print(sm.tsa.adfuller(y.NIKKEI225,regression='ct')[1])


print(sm.tsa.adfuller(y.NIKKEI225,regression='ct')[2])


import pandas as pd
x=y.shift(1).dropna()   # 説明変数の作成
for i in range(9):      # 自己回帰過程の作成
    x["AR("+str(i+1)+")"]=y.shift(1).diff(i+1)
yy=y.iloc[10:].dropna() # 被説明変数の作成
x=sm.add_constant(x).dropna() # 切片の作成
x['time']=range(len(yy))   # 時間トレンドの作成
results=sm.OLS(yy,x).fit() # 回帰の最適化
print(results.summary())


import pandas as pd
x=range(len(y))
x=sm.add_constant(x)
results=sm.OLS(y,x).fit()
print(results.summary())


plt.plot(y,label='n225')
results.fittedvalues.plot(label='prediction', style='--') # 予測値のプロット
plt.ylabel('log(n225 index)') # 軸ラベルの設定
plt.legend(loc='upper left')  # 軸ラベルの位置の設定
plt.savefig('nikkeiBp2_3.png')



